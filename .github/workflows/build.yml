name: Build and Release Pomodoro Timer

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        go-version: ['1.22']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install dependencies
        run: |
          go install github.com/akavel/rsrc@latest
          go install github.com/fyne-io/fyne-cross@latest

      - name: Prepare resources
        run: |
          # 创建包含图标声明的完整 manifest 文件
          $manifestContent = @"
          <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
          <assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
            <assemblyIdentity 
              version="1.0.0.0"
              processorArchitecture="amd64"
              name="XTimer"
              type="win32"
            />
            <description>Pomodoro Timer Application</description>
            <dependency>
              <dependentAssembly>
                <assemblyIdentity
                  type="win32"
                  name="Microsoft.Windows.Common-Controls"
                  version="6.0.0.0"
                  processorArchitecture="amd64"
                  publicKeyToken="6595b64144ccf1df"
                  language="*"
                />
              </dependentAssembly>
            </dependency>
            <iconManifest>
              <icon ID="1" Path="assets/logo.ico" />
            </iconManifest>
          </assembly>
          "@
          $manifestContent | Out-File -FilePath xtimer.manifest -Encoding UTF8
          
          # 确保 assets 目录存在
          if (-not (Test-Path -Path assets)) {
            New-Item -Path assets -ItemType Directory
          }
          
          # 转换 PNG 为 ICO (需要安装 ImageMagick)
          if (-not (Get-Command magick -ErrorAction SilentlyContinue)) {
            choco install imagemagick -y
          }
          magick convert assets/logo.png -define icon:auto-resize=256,128,64,48,32,16 assets/logo.ico
          
          # 验证文件存在
          Write-Host "Manifest file content:"
          Get-Content -Path xtimer.manifest
          Write-Host "Icon file exists: " (Test-Path -Path assets/logo.ico)

      - name: Generate resource file
        run: rsrc -manifest xtimer.manifest -ico assets/logo.ico -o rsrc.syso

      - name: Build Windows executable
        run: |
          $env:GOOS = "windows"
          $env:GOARCH = "amd64"
          $env:CGO_ENABLED = "1"
          go build -ldflags="-s -w -H=windowsgui" -o XTimer.exe main.go rsrc.syso  # 显式包含资源文件

      - name: Compress executable
        run: |
          if (-not (Get-Command upx -ErrorAction SilentlyContinue)) {
            choco install upx -y
          }
          upx --best XTimer.exe

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: XTimer-Windows
          path: XTimer.exe

  release:
    needs: [build-windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/XTimer-Windows/XTimer.exe
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            Pomodoro Timer Application
            - Windows: XTimer.exe
          draft: false
          prerelease: false